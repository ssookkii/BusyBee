/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-18 09:10:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class message_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

String customerWrite = (String)request.getAttribute("customerWrite");
if(customerWrite != null && !customerWrite.equals("")){
	if(customerWrite.equals("CUS_ADD_OK")){
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"성공적으로 작성되었습니다\");\n");
      out.write("		location.href = \"customer.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
	else{
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"다시 작성해 주십시오\");\n");
      out.write("		location.href = \"customerWrite.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
}

String customerDelete = (String)request.getAttribute("customerDelete");
if(customerDelete != null && !customerDelete.equals("")){
	if(customerDelete.equals("CUS_DEL_OK")){
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"성공적으로 삭제되었습니다\");\n");
      out.write("		location.href = \"customer.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
	else{
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"삭제에 실패했습니다.\");\n");
      out.write("		location.href = \"customer.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
}

String customerUpdate = (String)request.getAttribute("customerUpdate");
if(customerUpdate != null && !customerUpdate.equals("")){
	if(customerUpdate.equals("CUS_UPDATE_OK")){
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"성공적으로 수정되었습니다\");\n");
      out.write("		location.href = \"customer.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
	else{
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"수정하기에 실패했습니다\");\n");
      out.write("		location.href = \"customerDetail.do?seq=\"+seq;\n");
      out.write("		</script>\n");
      out.write("		");

	}
}

String customerAnswer = (String)request.getAttribute("customerAnswer");
if(customerAnswer != null && !customerAnswer.equals("")){
	if(customerAnswer.equals("CUS_ANSWER_OK")){
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"성공적으로 작성되었습니다\");\n");
      out.write("		location.href = \"customer.do\";\n");
      out.write("		</script>\n");
      out.write("		");

	}
	else{
		
      out.write("\n");
      out.write("		<script type=\"text/javascript\">\n");
      out.write("		alert(\"작성에 실패했습니다\");\n");
      out.write("		location.href = \"customerAnswer.do?seq=\"+seq;\n");
      out.write("		</script>\n");
      out.write("		");

	}
}
	String addUser_Msg = (String) request.getAttribute("addUser_Msg");
	if(addUser_Msg!=null && addUser_Msg!="") {
		if(addUser_Msg=="addUser_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('BusyBee의 가족이 되신 것을 환영합니다 :)');\n");
      out.write("			location.href=\"loginMain.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원가입을 다시 진행해주세요.');\n");
      out.write("			location.href=\"regi2.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String loginCheck_Msg = (String) request.getAttribute("loginCheck_Msg");
	if(loginCheck_Msg!=null && loginCheck_Msg!="") {
		if(loginCheck_Msg=="loginCheck_SUCCESS") {
			String name = (String) request.getAttribute("name");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('오늘도 파이팅입니다, ' + '");
      out.print(name );
      out.write("' + '님 :)');\n");
      out.write("			location.href=\"login.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('로그인 정보를 다시 확인해주세요.');\n");
      out.write("			location.href=\"loginMain.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	// 프로필사진이 바뀌지 않는 정보수정
	String updUser_n_Msg = (String) request.getAttribute("updUser_n_Msg");
	if(updUser_n_Msg!=null && updUser_n_Msg!="") {
		if(updUser_n_Msg=="updUser_n_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보가 수정되었습니다.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보 수정에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	// 프로필사진이 바뀌는 정보수정
	String updUser_y_Msg = (String) request.getAttribute("updUser_y_Msg");
	if(updUser_y_Msg!=null && updUser_y_Msg!="") {
		if(updUser_y_Msg=="updUser_y_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보가 수정되었습니다.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보 수정에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	// 프로필사진이 바뀌는 정보수정(기본 프로필사진)
	String updUser_b_Msg = (String) request.getAttribute("updUser_b_Msg");
	if(updUser_b_Msg!=null && updUser_b_Msg!="") {
		if(updUser_b_Msg=="updUser_b_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보가 수정되었습니다.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('회원정보 수정에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String updPwd_Msg = (String) request.getAttribute("updPwd_Msg");
	if(updPwd_Msg!=null && updPwd_Msg!="") {
		if(updPwd_Msg=="updPwd_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('비밀번호를 재설정했습니다.');\n");
      out.write("			location.href=\"loginMain.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('비밀번호 재설정에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"loginMain.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String delUser_Msg = (String) request.getAttribute("delUser_Msg");
	if(delUser_Msg!=null && delUser_Msg!="") {
		if(delUser_Msg=="delUser_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그동안 BusyBee를 사용해주셔서 감사합니다.');\n");
      out.write("			location.href=\"loginMain.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('계정 삭제에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goUserinfo.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String addGroup_Msg = (String) request.getAttribute("addGroup_Msg");
	if(addGroup_Msg!=null && addGroup_Msg!="") {
		if(addGroup_Msg=="addGroup_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹을 생성하였습니다.');\n");
      out.write("			location.href=\"goMygroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 생성에 실패했습니다. 다시 생성해주세요.');\n");
      out.write("			location.href=\"goAddgroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String addGroupMem_Msg = (String) request.getAttribute("addGroupMem_Msg");
	if(addGroupMem_Msg!=null && addGroupMem_Msg!="") {
		if(addGroupMem_Msg=="addGroupMem_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 가입을 승인했습니다.');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 가입에 실패했습니다.');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String delGroupMem_Msg = (String) request.getAttribute("delGroupMem_Msg");
	if(delGroupMem_Msg!=null && delGroupMem_Msg!="") {
		if(delGroupMem_Msg=="delGroupMem_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹에서 탈퇴했습니다.');\n");
      out.write("			location.href=\"goMygroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 탈퇴에 실패했습니다.');\n");
      out.write("			location.href=\"goMygroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String outGroupMem_Msg = (String) request.getAttribute("outGroupMem_Msg");
	if(outGroupMem_Msg!=null && outGroupMem_Msg!="") {
		if(outGroupMem_Msg=="outGroupMem_SUCCESS") {
			String outgroup_code = (String) request.getAttribute("outgroup_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('해당 멤버를 그룹에서 추방했습니다.');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(outgroup_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			String outgroup_code = (String) request.getAttribute("outgroup_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('추방에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(outgroup_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String addNoti_Msg = (String) request.getAttribute("addNoti_Msg");
	if(addNoti_Msg!=null && addNoti_Msg!="") {
		if(addNoti_Msg=="addNoti_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 리더에게 가입 신청을 보냈습니다.');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('가입 신청에 실패했습니다. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goSearchgroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String inv_addNoti_Msg = (String) request.getAttribute("inv_addNoti_Msg");
	if(inv_addNoti_Msg!=null && inv_addNoti_Msg!="") {
		if(inv_addNoti_Msg=="inv_addNoti_SUCCESS") {
			String inv_group_code = (String) request.getAttribute("inv_group_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('해당 멤버에게 가입 요청을 보냈습니다.');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(inv_group_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			String inv_group_code = (String) request.getAttribute("inv_group_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('가입 요청 전송에 실패했습니다.. 다시 시도해주세요.');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(inv_group_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String deleteNoti_Msg = (String) request.getAttribute("deleteNoti_Msg");
	if(deleteNoti_Msg!=null && deleteNoti_Msg!="") {
		if(deleteNoti_Msg=="deleteNoti_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 가입 요청을 취소했습니다.');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 승인 오류입니다. 다시 확인해주세요.');\n");
      out.write("			alert('");
      out.print(deleteNoti_Msg);
      out.write("');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String lead_deleteNoti_Msg = (String) request.getAttribute("lead_deleteNoti_Msg");
	if(lead_deleteNoti_Msg!=null && lead_deleteNoti_Msg!="") {
		if(lead_deleteNoti_Msg=="lead_deleteNoti_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 가입 요청을 거절했습니다.');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 승인 오류입니다. 다시 확인해주세요.');\n");
      out.write("			alert('");
      out.print(deleteNoti_Msg);
      out.write("');\n");
      out.write("			location.href=\"goNoti.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String updGroup_Msg = (String) request.getAttribute("updGroup_Msg");
	if(updGroup_Msg!=null && updGroup_Msg!="") {
		if(updGroup_Msg=="updGroup_SUCCESS") {
			String group_code = (String) request.getAttribute("group_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 정보를 수정했습니다.');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(group_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			String group_code = (String) request.getAttribute("group_code");
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('그룹 정보 수정에 실패했습니다. 다시 확인해주세요.');\n");
      out.write("			alert('");
      out.print(deleteNoti_Msg);
      out.write("');\n");
      out.write("			location.href=\"goManagegroup.do?group_code=\" + '");
      out.print(group_code );
      out.write("';\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}
	
	String changeleader_Msg = (String) request.getAttribute("changeleader_Msg");
	if(changeleader_Msg!=null && changeleader_Msg!="") {
		if(changeleader_Msg=="changeleader_SUCCESS") {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('리더를 위임했습니다. 나의 그룹 확인으로 넘어갑니다.');\n");
      out.write("			location.href=\"goMygroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		} else {
			
      out.write("\n");
      out.write("			<script>\n");
      out.write("			alert('리더 변경에 실패했습니다. 나의 그룹 확인으로 넘어갑니다.');\n");
      out.write("			alert('");
      out.print(deleteNoti_Msg);
      out.write("');\n");
      out.write("			location.href=\"goMygroup.do\";\n");
      out.write("			</script>\n");
      out.write("			");

		}
	}

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>메시지</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
