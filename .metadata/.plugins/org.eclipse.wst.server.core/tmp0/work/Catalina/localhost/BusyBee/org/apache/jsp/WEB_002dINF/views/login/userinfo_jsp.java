/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-18 10:14:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mul.cam.a.dto.UserDto;

public final class userinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mul.cam.a.dto.UserDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("    \n");

	UserDto login = (UserDto) session.getAttribute("login");
	String id = login.getId();

      out.write("\n");
      out.write("\n");
      out.write("<!-- \n");
      out.write("[참고] 프로필 사진이 로딩이 안되는 경우\n");
      out.write("(1) 'Servers' 폴더 > server.xml\n");
      out.write("(2) (*) Web에서 local의 이미지를 볼 수 있게 하는 설정 확인\n");
      out.write("(3) << 다음과 같이 수정 >> docBase=\"프로필 사진이 업로드되는 서버의 경로\" (\\는 \\\\로 써야 인식됨)\n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<!-- AJAX -->\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 파일유효성 검사를 위한 JQuery 버전 -->\n");
      out.write("<script src=\"http://code.jquery.com/jquery-migrate-1.2.1.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("<form id=\"frm\" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("<h3>정보수정</h3>\n");
      out.write("<table>\n");
      out.write("	<thead>\n");
      out.write("	<tr>\n");
      out.write("		<th>ID</th>\n");
      out.write("		<th>이름</th>\n");
      out.write("		<th>생년월일</th>\n");
      out.write("		<th>이메일</th>\n");
      out.write("		<th>핸드폰 (공개<input type=\"checkbox\" id=\"p_Check\" onchange=\"public_Change()\">)</th>\n");
      out.write("		<th id=\"f\">프로필사진<input type=\"file\" onchange=\"filechange()\" id=\"profPic\" name=\"profPic\">\n");
      out.write("		<input type=\"button\" id=\"delProf\" onclick=\"changeBee()\" value=\"프로필사진 삭제\">\n");
      out.write("		</th>\n");
      out.write("		<th>프로필메세지</th>\n");
      out.write("		<th>회원가입일</th>\n");
      out.write("	</tr>\n");
      out.write("	</thead>\n");
      out.write("	<tbody id=\"tBody\">\n");
      out.write("		<tr>\n");
      out.write("		</tr>\n");
      out.write("	</tbody>\n");
      out.write("</table>\n");
      out.write("<input type=\"hidden\" id=\"id\" name='id' value='");
      out.print(id);
      out.write("'>\n");
      out.write("</form>\n");
      out.write("<input type=\"hidden\" id=\"fChange\">\n");
      out.write("<input type=\"hidden\" id=\"bChange\">\n");
      out.write("<button type=\"button\" onclick=\"location.href='newPassword.do'\">비밀번호 재설정</button>\n");
      out.write("<button type=\"button\" id=\"updUser\" onclick=\"go_updUser()\">수정하기</button>\n");
      out.write("<button type=\"button\" id=\"delUser\" onclick=\"go_delUser()\">계정 삭제</button>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(document).ready(function(){\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"selectUser.do\",\n");
      out.write("		type:\"get\",\n");
      out.write("		data:{\"id\":'");
      out.print(id );
      out.write("'},\n");
      out.write("		\n");
      out.write("		success:function(data){\n");
      out.write("			if(data!=null && data!=\"\") {\n");
      out.write("				var tableTd = \"\";\n");
      out.write("				$(\"#tBody\").html('');\n");
      out.write("				tableTd += '<tr>'\n");
      out.write("							+ '<td>' + data.id + '</td>'\n");
      out.write("							+ \"<td><input type='text' id='name' name='name' value='\" + data.name + \"'></td>\"\n");
      out.write("							+ \"<td><input type='date' id='birth' name='birth' value='\" + data.birth + \"'></td>\"\n");
      out.write("							+ \"<td><input type='text' id='email' name='email' value='\" + data.email + \"'></td>\"\n");
      out.write("							+ \"<td><input type='text' id='phone' name='phone' value='\" + data.phone + \"'></td>\"\n");
      out.write("							+ \"<td>\";\n");
      out.write("				if(data.profPic_Origin===undefined || data.profPic_Origin==\"\" || data.profPic_Origin==\"basic.png\" ) {\n");
      out.write("					tableTd += \"<img src='./images/BusyB.png' width='100px' height='100px' alt=''/></td>\";\n");
      out.write("					$(\"#delProf\").remove();\n");
      out.write("				} else{ \n");
      out.write("					tableTd += \"<img src='/busyBeeImg/\" + data.profPic_Server + \"'width='100px' height='100px' alt=''/></td>\";\n");
      out.write("				}\n");
      out.write("				tableTd += \"<td><input type='text' id='profMsg' name='profMsg' value='\" + data.profMsg + \"'></td>\"\n");
      out.write("							+ \"<td>\" + data.regidate.substr(0,10) + \"</td>\"\n");
      out.write("							+ \"<td><input type='hidden' id='phone_public' name='phone_public' value='\" + data.phone_public + \"'></td>\"\n");
      out.write("						+ '</tr>'\n");
      out.write("				$(\"#tBody\").append(tableTd);\n");
      out.write("						\n");
      out.write("				if(data.phone_public==null) {\n");
      out.write("					$(\"#p_Check\").prop('checked', false);\n");
      out.write("				} else {\n");
      out.write("					$(\"#p_Check\").prop('checked', true);\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		},\n");
      out.write("		error:function(){\n");
      out.write("			alert('error');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("\n");
      out.write("function filechange(){\n");
      out.write("	\n");
      out.write("	$(\"#fChange\").val('changed');\n");
      out.write("	var cancelBtn = \"<button type='button' id='cancelChange'>변경 취소</button>\";\n");
      out.write("	$(\"#f\").append(cancelBtn)\n");
      out.write("	\n");
      out.write("	alert($(\"#fChange\").val());\n");
      out.write("}\n");
      out.write("\n");
      out.write("function public_Change(){\n");
      out.write("	\n");
      out.write("	if($(\"#p_Check\").is(':checked')) {\n");
      out.write("		$(\"#phone_public\").val('on');\n");
      out.write("	} else {\n");
      out.write("		$(\"#phone_public\").val(null);\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function changeBee(){\n");
      out.write("	$(\"#bChange\").val('changed');\n");
      out.write("	var cancelBtn = \"<button type='button' id='cancelChange'>변경 취소</button>\";\n");
      out.write("	$(\"#f\").append(cancelBtn)\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("function go_updUser() {\n");
      out.write("	\n");
      out.write("	if($(\"#fChange\").val()=='changed') {\n");
      out.write("		$(\"#frm\").attr(\"action\", \"updUser_y.do\");\n");
      out.write("		$(\"#frm\").submit();\n");
      out.write("	} else if ($(\"#bChange\").val()=='changed'){\n");
      out.write("		$(\"#frm\").attr(\"action\", \"updUser_y.do\");\n");
      out.write("		$(\"#frm\").submit();\n");
      out.write("	}\n");
      out.write("	else {\n");
      out.write("		$(\"#frm\").attr(\"action\", \"updUser_n.do\");\n");
      out.write("		$(\"#frm\").submit();\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write("function go_delUser() {\n");
      out.write("	\n");
      out.write("	location.href=\"delUser.do?id=\" + '");
      out.print(id);
      out.write("';\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("$(document).on(\"click\", \"#cancelChange\", function(){\n");
      out.write("	$(\"#fChange\").val('');\n");
      out.write("	$(\"#bChange\").val('');\n");
      out.write("	$(\"#profPic\").val('');\n");
      out.write("	$(this).remove();\n");
      out.write("	\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(document).on(\"change\", \"input[type='file']\", function(){\n");
      out.write("\n");
      out.write("	// 이미지 확장자 유효성 검사\n");
      out.write("	var file_path = $(this).val();\n");
      out.write("	var reg = /(.*?)\\.(jpg|jpeg|png)$/;\n");
      out.write("\n");
      out.write("	if (file_path != \"\" && (file_path.match(reg) == null || reg.test(file_path) == false)) {\n");
      out.write("\n");
      out.write("		if ($.browser.msie) { // ie 일때 \n");
      out.write("			$(this).replaceWith($(this).clone(true));\n");
      out.write("		} else {\n");
      out.write("			$(this).val(\"\");\n");
      out.write("		}\n");
      out.write("		alert(\"이미지 파일만 업로드 가능합니다.\");\n");
      out.write("		$(\"#cancelChange\").remove();\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 파일명 길이 유효성 검사\n");
      out.write("	var filename = $(\"#profPic\").val().substr(12);\n");
      out.write("	if(filename.length>20) {\n");
      out.write("		alert(\"파일명은 확장자를 포함하여, 20자를 넘길 수 없습니다.\");\n");
      out.write("		$(this).val(\"\");\n");
      out.write("		$(\"#cancelChange\").remove();\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// [참고] 저는 C:/fakepath/로 파일 경로가 설정되기 때문에 substr(12)로 잡았는데,\n");
      out.write("	// 다른 분이 테스트하시는 환경에서는 오류가 날 수 있으니\n");
      out.write("	// 프로필 사진명은 짧게 해서 올리시는 것을 추천합니다!\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
