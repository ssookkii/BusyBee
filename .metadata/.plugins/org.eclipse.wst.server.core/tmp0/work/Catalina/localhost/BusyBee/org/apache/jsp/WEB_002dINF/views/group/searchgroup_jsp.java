/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-17 15:43:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.group;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mul.cam.a.dto.UserDto;

public final class searchgroup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mul.cam.a.dto.UserDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("    \n");

	UserDto login = (UserDto) session.getAttribute("login");
	String id = login.getId();

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<!-- AJAX -->\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div>\n");
      out.write("<h3>그룹검색</h3>\n");
      out.write("<select id=\"choice\" onChange=\"searchGroup()\">\n");
      out.write("	<option value=\"\">검색</option>\n");
      out.write("	<option value=\"group_code\">그룹코드</option>\n");
      out.write("	<option value=\"group_name\">그룹명</option>\n");
      out.write("	<option value=\"leader_name\">리더 이름</option>\n");
      out.write("	<option value=\"leader_id\">리더 ID</option>\n");
      out.write("</select>\n");
      out.write("<input type=\"text\" id=\"search\">\n");
      out.write("[참고] 지금 내 로그인 정보 : <input type=\"text\" value='");
      out.print(id );
      out.write("' readonly=\"readonly\">\n");
      out.write("<table border=\"1\">\n");
      out.write("	<thead>\n");
      out.write("	<tr>\n");
      out.write("		<th>번호</th>\n");
      out.write("		<th>그룹코드</th>\n");
      out.write("		<th>그룹명</th>\n");
      out.write("		<th>그룹소개</th>\n");
      out.write("		<th>그룹리더</th>\n");
      out.write("		<th>그룹생성일</th>\n");
      out.write("	</tr>\n");
      out.write("	</thead>\n");
      out.write("	<tbody id=\"tableBody\">\n");
      out.write("	</tbody>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("<input type=\"hidden\" id=\"id\" value='");
      out.print(id );
      out.write("'>\n");
      out.write("\n");
      out.write("<br><br><br>\n");
      out.write("<hr>\n");
      out.write("<h3>가입 신청</h3>\n");
      out.write("그룹 코드 : <input type=\"text\" id=\"wantTo\">\n");
      out.write("<h6>그룹 코드는 공백 없이, 영문 소문자 및 숫자를 포함한 8자입니다.</h6>\n");
      out.write("가입 메세지 : <input type=\"text\" id=\"wantTo_Msg\">\n");
      out.write("<input type=\"button\" value=\"가입신청\" onclick=\"go_checkDupl()\">\n");
      out.write("<table border=\"1\">\n");
      out.write("	<thead>\n");
      out.write("	<tr>\n");
      out.write("		<th>그룹코드</th>\n");
      out.write("		<th>그룹명</th>\n");
      out.write("		<th>그룹소개</th>\n");
      out.write("		<th>그룹리더</th>\n");
      out.write("		<th>그룹생성일</th>\n");
      out.write("	</tr>\n");
      out.write("	</thead>\n");
      out.write("	<tbody id=\"tableBody2\">\n");
      out.write("	</tbody>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\n");
      out.write("$(\"#search\").keyup(function(){\n");
      out.write("	searchGroup();\n");
      out.write("});\n");
      out.write("\n");
      out.write("$(\"#wantTo\").keyup(function(e){\n");
      out.write("	\n");
      out.write("	let key = e.key || e.keyCode;\n");
      out.write("	\n");
      out.write("	if(key==\" \" || key==32) {\n");
      out.write("		$(\"#wantTo\").val('');\n");
      out.write("		$(\"#tableBody2\").html('');\n");
      out.write("		var tableTdNone = '<tr><td>아이디에는 공백이 들어갈 수 없습니다.</td></tr>';\n");
      out.write("		$(\"#tableBody2\").append(tableTdNone);\n");
      out.write("		return;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 그룹코드 유효성 검사\n");
      out.write("	var gcValid = /^[a-z0-9]{0,8}$/;\n");
      out.write("	\n");
      out.write("	if(!gcValid.test($(\"#wantTo\").val())) {\n");
      out.write("		$(\"#wantTo\").val('');\n");
      out.write("		$(\"#tableBody2\").html('');\n");
      out.write("		var tableTdNone = '<tr><td>그룹코드에는 영문 소문자, 숫자만 들어갈 수 있습니다.</td></tr>';\n");
      out.write("		$(\"#tableBody2\").append(tableTdNone);\n");
      out.write("		return;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"singleGroup.do\",\n");
      out.write("		type:\"get\",\n");
      out.write("		data:{\"group_code\":$(\"#wantTo\").val()},\n");
      out.write("		success:function(data){\n");
      out.write("			if(data!=null && data!=\"\") {\n");
      out.write("				var tableTd = \"\";\n");
      out.write("				$(\"#tableBody2\").html('');\n");
      out.write("				tableTd += '<tr>'\n");
      out.write("							+ '<td>' + data.group_code + '</td>'\n");
      out.write("							+ '<td>' + data.group_name + '</td>'\n");
      out.write("							+ '<td>' + data.group_info + '</td>'\n");
      out.write("							+ '<td>' + data.leader_name + '(' + data.leader_id + ')' + '</td>'\n");
      out.write("							+ '<td>' + data.regidate.substr(0,10) + '</td>'\n");
      out.write("							+ \"<td><input type='hidden' id='group_code' value='\" + data.group_code + \"'</td>\"\n");
      out.write("							+ \"<td><input type='hidden' id='leader_id' value='\" + data.leader_id + \"'</td>\"\n");
      out.write("							+ '</tr>';\n");
      out.write("				$(\"#tableBody2\").append(tableTd);\n");
      out.write("			} else if(data==null || data==\"\") {\n");
      out.write("				$(\"#tableBody2\").html('');\n");
      out.write("				var tableTdNone = '<tr><td>정확한 그룹코드를 입력해주세요.</td></tr>';\n");
      out.write("				$(\"#tableBody2\").append(tableTdNone);\n");
      out.write("			}\n");
      out.write("		},\n");
      out.write("		error:function(){\n");
      out.write("			alert('Aj2 error');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function go_checkDupl(){\n");
      out.write("	\n");
      out.write("	if($.trim($(\"#wantTo\").val())==\"\") {\n");
      out.write("		alert('그룹 코드를 입력해주세요.');\n");
      out.write("		return;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"checkDupl.do\",\n");
      out.write("		type:\"get\",\n");
      out.write("		data:{\"id\":'");
      out.print(id);
      out.write("', \"group_code\":$(\"#group_code\").val()},\n");
      out.write("		success:function(msg){\n");
      out.write("			if(msg!=null && msg!=\"\") {\n");
      out.write("				if(msg==\"Already\"){\n");
      out.write("					alert('이미 가입된 그룹입니다.');\n");
      out.write("					$(\"#wantTo\").val('');\n");
      out.write("					$(\"#wantTo_Msg\").val('');\n");
      out.write("					$(\"#tableBody2\").html('');\n");
      out.write("				} else if(msg==\"WAIT\") {\n");
      out.write("					alert('승인 대기중인 그룹입니다.');\n");
      out.write("					$(\"#wantTo\").val('');\n");
      out.write("					$(\"#wantTo_Msg\").val('');\n");
      out.write("					$(\"#tableBody2\").html('');\n");
      out.write("				} else {\n");
      out.write("					location.href=\"addNoti.do?to_id=\"+$(\"#leader_id\").val()+\"&from_id=\"+'");
      out.print(id);
      out.write("'\n");
      out.write("							+\"&group_code=\"+$(\"#group_code\").val()+\"&regimsg=\" + $(\"#wantTo_Msg\").val();\n");
      out.write("				}\n");
      out.write("			} else {\n");
      out.write("				alert('그룹코드를 다시 확인해주세요.');\n");
      out.write("				$(\"#wantTo_Msg\").val('');\n");
      out.write("				$(\"#wantTo_Msg\").val('');\n");
      out.write("			}\n");
      out.write("		},\n");
      out.write("		error:function(){\n");
      out.write("			alert('error');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function searchGroup() {\n");
      out.write("	\n");
      out.write("	if($.trim($(\"#choice\").val())==\"\" || $.trim($(\"#search\").val())==\"\"  ) {\n");
      out.write("		$(\"#tableBody\").html('');\n");
      out.write("		return;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:\"allGroup.do\",\n");
      out.write("		type:\"get\",\n");
      out.write("		data:{\"choice\":$(\"#choice\").val(), \"search\":$(\"#search\").val()},\n");
      out.write("		success:function(data){\n");
      out.write("			if(data!=null && data!=\"\") {\n");
      out.write("				var tableTd = \"\";\n");
      out.write("				var count = 1;\n");
      out.write("				for(var i=0; i<data.length; i++){\n");
      out.write("					$(\"#tableBody\").html('');\n");
      out.write("					tableTd += '<tr>'\n");
      out.write("								+ '<td>' + count + '</td>'\n");
      out.write("								+ '<td>' + data[i].group_code + '</td>'\n");
      out.write("								+ '<td>' + data[i].group_name + '</td>'\n");
      out.write("								+ '<td>' + data[i].group_info + '</td>'\n");
      out.write("								+ '<td>' + data[i].leader_name + '(' + data[i].leader_id + ')' + '</td>'\n");
      out.write("								+ '<td>' + data[i].regidate.substr(0,10) + '</td>'\n");
      out.write("							+ '</tr>';\n");
      out.write("					count++;\n");
      out.write("				}\n");
      out.write("				$(\"#tableBody\").append(tableTd);\n");
      out.write("			} else if(data==null || data==\"\") {\n");
      out.write("				$(\"#tableBody\").html('');\n");
      out.write("				var tableTdNone = '<tr><td>조건에 해당하는 그룹이 없습니다.</td></tr>';\n");
      out.write("				$(\"#tableBody\").append(tableTdNone);\n");
      out.write("			}\n");
      out.write("		},\n");
      out.write("		error:function(){\n");
      out.write("			alert('Aj1 error');\n");
      out.write("		}\n");
      out.write("	});\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
